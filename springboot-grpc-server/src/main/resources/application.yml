spring:
  application:
    name: springboot-grpc-server

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: Ov23liS4x1Q75O4lXDwq
            client-secret: 857f64a782c81a6ef48a83dca287589a06d48e9c
            scope: user,repo
#            authorization-grant-type: authorization_code
#        provider:
#          my-auth-server:
#            issuer-uri: https://localhost:8089
          gitee:
            client-id: 829244493594a88c2f0f054ec12e5c5e091b6e4f283c3bde007a9a568c8e2763
            client-secret: e4be81b36bad728ed45f4ffc3e216f8c1f521ac962e9f6d1f66451a82d71052e
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: user_info

        provider:
          gitee:
            authorization-uri: https://gitee.com/oauth/authorize
            token-uri: https://gitee.com/oauth/token
            user-info-uri: https://gitee.com/api/v5/user
            user-name-attribute: name  # 从用户信息中提取用户名的字段





  grpc:
    server:
      port: 9090
  cache:
    type: redis
    redis:
      time-to-live: 600000
      cache-null-values: true

  data:
    redis:
      host: localhost
      port: 6379
      password:
      database: 0
server:
  port: 8089
logging:
  level:
    org.springframework.security: debug
    org.springframework.web.client: debug


